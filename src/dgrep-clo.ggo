args "--unamed-opts --long-help"
package "dgrep"
usage "dgrep [OPTION]... EXPRESSION"
description "Grep standard input for lines that match EXPRESSION.

EXPRESSION may be DT_STR{}s prefixed with an operator \
`<', `<=', '=', '>=', '>', `!=', `<>' (if omitted defaults to `='),
which will match lines with DT_STR{}s which are older, older-equal, \
equal, newer-equal, newer, or not equal respectively.

EXPRESSION may also be format specifiers infixed by above operators
and suffixed by a value (e.g. `%a=\"Wed\"') which matches lines whose
%a representation (weekday name abbreviated) is \"Wed\".

EXPRESSION may be statements as described above concatenated through \
`&&' (for conjunction) or `||' (disjunction), both of which may be \
parenthesised as per usual to change precedence (`&&' goes over `||')."

QUIET
INPUT_FORMAT
BACKSLASH_ESCAPES

option "only-matching" o
	"Show only the part of a line matching DATE."
	optional

defgroup "op"
groupdesc="Operations can be specified by options as well.
In all cases EXPRESSION must be a DT_STR and no concatenation is through
conjunction (`&&') or disjunction (`||') operators is possible.

This serves solely as a means of convenience, e.g. the dtest tool \
has a similar syntax."

groupoption "eq" -
	"Lines match when DT_STR{}s are equal to EXPRESSION."
	group="op"

groupoption "ne" -
	"Lines match when DT_STR{}s are not the same as EXPRESSION."
	group="op"

groupoption "gt" -
	"Lines match when DT_STR{}s are newer than EXPRESSION."
	group="op"

groupoption "lt" -
	"Lines match when DT_STR{}s are older than EXPRESSION."
	group="op"

groupoption "ge" -
	"Lines match when DT_STR{}s are newer than or equal EXPRESSION."
	group="op"

groupoption "le" -
	"Lines match when DT_STR{}s are older than or equal EXPRESSION."
	group="op"

## convenience
groupoption "nt" -
	"Lines match when DT_STR{}s are newer than or equal EXPRESSION."
	group="op"

groupoption "ot" -
	"Lines match when DT_STR{}s are older than or equal EXPRESSION."
	group="op"
